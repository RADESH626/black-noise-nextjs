import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { PopUpProvider } from '../context/PopUpContext';
import { ModalProvider } from '../context/ModalContext';
import { CartProvider } from '../context/CartContext'; // Import CartProvider
import SessionProviderWrapper from './SessionProviderWrapper';
import { MockSessionProvider } from '@/context/MockSessionContext';
import SessionToggleButton from '@/components/common/SessionToggleButton';
import { MockDataProvider } from '@/context/MockDataContext';
import MockDataToggleButton from '@/components/common/MockDataToggleButton';
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"], 
});

export const metadata = {
  title: 'Black Noise App',
  description: 'Generated by create next app',
}

export default function RootLayout({ children }) {
  return (
    <html lang="es">
      <body className="bg-primary text-secondary">
          <PopUpProvider>
            <ModalProvider>
                <CartProvider> {/* Aqu√≠ envuelves con CartProvider */}
                  <SessionProviderWrapper>
                    <MockSessionProvider>
                      <MockDataProvider>
                        {children}
                        {/* Mock Data Toggle Button */}
                        <div style={{ position: 'fixed', bottom: '70px', right: '20px', zIndex: 1000 }}>
                          <MockDataToggleButton />
                        </div>
                        {/* Session Toggle Button */}
                        <div style={{ position: 'fixed', bottom: '20px', right: '20px', zIndex: 1000 }}>
                          <SessionToggleButton />
                        </div>
                      </MockDataProvider>
                    </MockSessionProvider>
                  </SessionProviderWrapper>
                </CartProvider>
            </ModalProvider>
          </PopUpProvider>
      </body>
    </html>
  )
}
